{"version":3,"file":"static/js/621.fab5d04c.chunk.js","mappings":"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","sources":["../node_modules/node_modules/codemirror/addon/lint/lint.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n  var GUTTER_ID = \"CodeMirror-lint-markers\";\n  var LINT_LINE_ID = \"CodeMirror-lint-line-\";\n\n  function showTooltip(cm, e, content) {\n    var tt = document.createElement(\"div\");\n    tt.className = \"CodeMirror-lint-tooltip cm-s-\" + cm.options.theme;\n    tt.appendChild(content.cloneNode(true));\n    if (cm.state.lint.options.selfContain)\n      cm.getWrapperElement().appendChild(tt);\n    else\n      document.body.appendChild(tt);\n\n    function position(e) {\n      if (!tt.parentNode) return CodeMirror.off(document, \"mousemove\", position);\n      tt.style.top = Math.max(0, e.clientY - tt.offsetHeight - 5) + \"px\";\n      tt.style.left = (e.clientX + 5) + \"px\";\n    }\n    CodeMirror.on(document, \"mousemove\", position);\n    position(e);\n    if (tt.style.opacity != null) tt.style.opacity = 1;\n    return tt;\n  }\n  function rm(elt) {\n    if (elt.parentNode) elt.parentNode.removeChild(elt);\n  }\n  function hideTooltip(tt) {\n    if (!tt.parentNode) return;\n    if (tt.style.opacity == null) rm(tt);\n    tt.style.opacity = 0;\n    setTimeout(function() { rm(tt); }, 600);\n  }\n\n  function showTooltipFor(cm, e, content, node) {\n    var tooltip = showTooltip(cm, e, content);\n    function hide() {\n      CodeMirror.off(node, \"mouseout\", hide);\n      if (tooltip) { hideTooltip(tooltip); tooltip = null; }\n    }\n    var poll = setInterval(function() {\n      if (tooltip) for (var n = node;; n = n.parentNode) {\n        if (n && n.nodeType == 11) n = n.host;\n        if (n == document.body) return;\n        if (!n) { hide(); break; }\n      }\n      if (!tooltip) return clearInterval(poll);\n    }, 400);\n    CodeMirror.on(node, \"mouseout\", hide);\n  }\n\n  function LintState(cm, conf, hasGutter) {\n    this.marked = [];\n    if (conf instanceof Function) conf = {getAnnotations: conf};\n    if (!conf || conf === true) conf = {};\n    this.options = {};\n    this.linterOptions = conf.options || {};\n    for (var prop in defaults) this.options[prop] = defaults[prop];\n    for (var prop in conf) {\n      if (defaults.hasOwnProperty(prop)) {\n        if (conf[prop] != null) this.options[prop] = conf[prop];\n      } else if (!conf.options) {\n        this.linterOptions[prop] = conf[prop];\n      }\n    }\n    this.timeout = null;\n    this.hasGutter = hasGutter;\n    this.onMouseOver = function(e) { onMouseOver(cm, e); };\n    this.waitingFor = 0\n  }\n\n  var defaults = {\n    highlightLines: false,\n    tooltips: true,\n    delay: 500,\n    lintOnChange: true,\n    getAnnotations: null,\n    async: false,\n    selfContain: null,\n    formatAnnotation: null,\n    onUpdateLinting: null\n  }\n\n  function clearMarks(cm) {\n    var state = cm.state.lint;\n    if (state.hasGutter) cm.clearGutter(GUTTER_ID);\n    if (state.options.highlightLines) clearErrorLines(cm);\n    for (var i = 0; i < state.marked.length; ++i)\n      state.marked[i].clear();\n    state.marked.length = 0;\n  }\n\n  function clearErrorLines(cm) {\n    cm.eachLine(function(line) {\n      var has = line.wrapClass && /\\bCodeMirror-lint-line-\\w+\\b/.exec(line.wrapClass);\n      if (has) cm.removeLineClass(line, \"wrap\", has[0]);\n    })\n  }\n\n  function makeMarker(cm, labels, severity, multiple, tooltips) {\n    var marker = document.createElement(\"div\"), inner = marker;\n    marker.className = \"CodeMirror-lint-marker CodeMirror-lint-marker-\" + severity;\n    if (multiple) {\n      inner = marker.appendChild(document.createElement(\"div\"));\n      inner.className = \"CodeMirror-lint-marker CodeMirror-lint-marker-multiple\";\n    }\n\n    if (tooltips != false) CodeMirror.on(inner, \"mouseover\", function(e) {\n      showTooltipFor(cm, e, labels, inner);\n    });\n\n    return marker;\n  }\n\n  function getMaxSeverity(a, b) {\n    if (a == \"error\") return a;\n    else return b;\n  }\n\n  function groupByLine(annotations) {\n    var lines = [];\n    for (var i = 0; i < annotations.length; ++i) {\n      var ann = annotations[i], line = ann.from.line;\n      (lines[line] || (lines[line] = [])).push(ann);\n    }\n    return lines;\n  }\n\n  function annotationTooltip(ann) {\n    var severity = ann.severity;\n    if (!severity) severity = \"error\";\n    var tip = document.createElement(\"div\");\n    tip.className = \"CodeMirror-lint-message CodeMirror-lint-message-\" + severity;\n    if (typeof ann.messageHTML != 'undefined') {\n      tip.innerHTML = ann.messageHTML;\n    } else {\n      tip.appendChild(document.createTextNode(ann.message));\n    }\n    return tip;\n  }\n\n  function lintAsync(cm, getAnnotations) {\n    var state = cm.state.lint\n    var id = ++state.waitingFor\n    function abort() {\n      id = -1\n      cm.off(\"change\", abort)\n    }\n    cm.on(\"change\", abort)\n    getAnnotations(cm.getValue(), function(annotations, arg2) {\n      cm.off(\"change\", abort)\n      if (state.waitingFor != id) return\n      if (arg2 && annotations instanceof CodeMirror) annotations = arg2\n      cm.operation(function() {updateLinting(cm, annotations)})\n    }, state.linterOptions, cm);\n  }\n\n  function startLinting(cm) {\n    var state = cm.state.lint;\n    if (!state) return;\n    var options = state.options;\n    /*\n     * Passing rules in `options` property prevents JSHint (and other linters) from complaining\n     * about unrecognized rules like `onUpdateLinting`, `delay`, `lintOnChange`, etc.\n     */\n    var getAnnotations = options.getAnnotations || cm.getHelper(CodeMirror.Pos(0, 0), \"lint\");\n    if (!getAnnotations) return;\n    if (options.async || getAnnotations.async) {\n      lintAsync(cm, getAnnotations)\n    } else {\n      var annotations = getAnnotations(cm.getValue(), state.linterOptions, cm);\n      if (!annotations) return;\n      if (annotations.then) annotations.then(function(issues) {\n        cm.operation(function() {updateLinting(cm, issues)})\n      });\n      else cm.operation(function() {updateLinting(cm, annotations)})\n    }\n  }\n\n  function updateLinting(cm, annotationsNotSorted) {\n    var state = cm.state.lint;\n    if (!state) return;\n    var options = state.options;\n    clearMarks(cm);\n\n    var annotations = groupByLine(annotationsNotSorted);\n\n    for (var line = 0; line < annotations.length; ++line) {\n      var anns = annotations[line];\n      if (!anns) continue;\n\n      // filter out duplicate messages\n      var message = [];\n      anns = anns.filter(function(item) { return message.indexOf(item.message) > -1 ? false : message.push(item.message) });\n\n      var maxSeverity = null;\n      var tipLabel = state.hasGutter && document.createDocumentFragment();\n\n      for (var i = 0; i < anns.length; ++i) {\n        var ann = anns[i];\n        var severity = ann.severity;\n        if (!severity) severity = \"error\";\n        maxSeverity = getMaxSeverity(maxSeverity, severity);\n\n        if (options.formatAnnotation) ann = options.formatAnnotation(ann);\n        if (state.hasGutter) tipLabel.appendChild(annotationTooltip(ann));\n\n        if (ann.to) state.marked.push(cm.markText(ann.from, ann.to, {\n          className: \"CodeMirror-lint-mark CodeMirror-lint-mark-\" + severity,\n          __annotation: ann\n        }));\n      }\n      // use original annotations[line] to show multiple messages\n      if (state.hasGutter)\n        cm.setGutterMarker(line, GUTTER_ID, makeMarker(cm, tipLabel, maxSeverity, annotations[line].length > 1,\n                                                       options.tooltips));\n\n      if (options.highlightLines)\n        cm.addLineClass(line, \"wrap\", LINT_LINE_ID + maxSeverity);\n    }\n    if (options.onUpdateLinting) options.onUpdateLinting(annotationsNotSorted, annotations, cm);\n  }\n\n  function onChange(cm) {\n    var state = cm.state.lint;\n    if (!state) return;\n    clearTimeout(state.timeout);\n    state.timeout = setTimeout(function(){startLinting(cm);}, state.options.delay);\n  }\n\n  function popupTooltips(cm, annotations, e) {\n    var target = e.target || e.srcElement;\n    var tooltip = document.createDocumentFragment();\n    for (var i = 0; i < annotations.length; i++) {\n      var ann = annotations[i];\n      tooltip.appendChild(annotationTooltip(ann));\n    }\n    showTooltipFor(cm, e, tooltip, target);\n  }\n\n  function onMouseOver(cm, e) {\n    var target = e.target || e.srcElement;\n    if (!/\\bCodeMirror-lint-mark-/.test(target.className)) return;\n    var box = target.getBoundingClientRect(), x = (box.left + box.right) / 2, y = (box.top + box.bottom) / 2;\n    var spans = cm.findMarksAt(cm.coordsChar({left: x, top: y}, \"client\"));\n\n    var annotations = [];\n    for (var i = 0; i < spans.length; ++i) {\n      var ann = spans[i].__annotation;\n      if (ann) annotations.push(ann);\n    }\n    if (annotations.length) popupTooltips(cm, annotations, e);\n  }\n\n  CodeMirror.defineOption(\"lint\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      clearMarks(cm);\n      if (cm.state.lint.options.lintOnChange !== false)\n        cm.off(\"change\", onChange);\n      CodeMirror.off(cm.getWrapperElement(), \"mouseover\", cm.state.lint.onMouseOver);\n      clearTimeout(cm.state.lint.timeout);\n      delete cm.state.lint;\n    }\n\n    if (val) {\n      var gutters = cm.getOption(\"gutters\"), hasLintGutter = false;\n      for (var i = 0; i < gutters.length; ++i) if (gutters[i] == GUTTER_ID) hasLintGutter = true;\n      var state = cm.state.lint = new LintState(cm, val, hasLintGutter);\n      if (state.options.lintOnChange)\n        cm.on(\"change\", onChange);\n      if (state.options.tooltips != false && state.options.tooltips != \"gutter\")\n        CodeMirror.on(cm.getWrapperElement(), \"mouseover\", state.onMouseOver);\n\n      startLinting(cm);\n    }\n  });\n\n  CodeMirror.defineExtension(\"performLint\", function() {\n    startLinting(this);\n  });\n});\n"],"names":["CodeMirror","GUTTER_ID","LINT_LINE_ID","showTooltip","cm","e","content","tt","document","createElement","position","parentNode","off","style","top","Math","max","clientY","offsetHeight","left","clientX","className","options","theme","appendChild","cloneNode","state","lint","selfContain","getWrapperElement","body","on","opacity","rm","elt","removeChild","hideTooltip","setTimeout","showTooltipFor","node","tooltip","hide","__name","poll","setInterval","n","nodeType","host","clearInterval","LintState","conf","hasGutter","prop","this","marked","Function","getAnnotations","linterOptions","defaults","hasOwnProperty","timeout","onMouseOver","waitingFor","highlightLines","tooltips","delay","lintOnChange","async","formatAnnotation","onUpdateLinting","clearMarks","clearGutter","clearErrorLines","i","length","clear","eachLine","line","has","wrapClass","exec","removeLineClass","makeMarker","labels","severity","multiple","marker","inner","getMaxSeverity","a","b","groupByLine","annotations","lines","ann","from","push","annotationTooltip","tip","messageHTML","innerHTML","createTextNode","message","lintAsync","id","abort","getValue","arg2","operation","updateLinting","startLinting","getHelper","Pos","then","issues","annotationsNotSorted","anns","filter","item","indexOf","maxSeverity","tipLabel","createDocumentFragment","to","markText","__annotation","setGutterMarker","addLineClass","onChange","clearTimeout","popupTooltips","target","srcElement","test","box","getBoundingClientRect","x","right","y","bottom","spans","findMarksAt","coordsChar","defineOption","val","old","Init","gutters","getOption","hasLintGutter","defineExtension","mod","require$$0"],"sourceRoot":""}