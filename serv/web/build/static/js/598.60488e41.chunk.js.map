{"version":3,"file":"static/js/598.60488e41.chunk.js","mappings":"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","sources":["../node_modules/node_modules/codemirror/addon/edit/closebrackets.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  var defaults = {\n    pairs: \"()[]{}''\\\"\\\"\",\n    closeBefore: \")]}'\\\":;>\",\n    triples: \"\",\n    explode: \"[]{}\"\n  };\n\n  var Pos = CodeMirror.Pos;\n\n  CodeMirror.defineOption(\"autoCloseBrackets\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.removeKeyMap(keyMap);\n      cm.state.closeBrackets = null;\n    }\n    if (val) {\n      ensureBound(getOption(val, \"pairs\"))\n      cm.state.closeBrackets = val;\n      cm.addKeyMap(keyMap);\n    }\n  });\n\n  function getOption(conf, name) {\n    if (name == \"pairs\" && typeof conf == \"string\") return conf;\n    if (typeof conf == \"object\" && conf[name] != null) return conf[name];\n    return defaults[name];\n  }\n\n  var keyMap = {Backspace: handleBackspace, Enter: handleEnter};\n  function ensureBound(chars) {\n    for (var i = 0; i < chars.length; i++) {\n      var ch = chars.charAt(i), key = \"'\" + ch + \"'\"\n      if (!keyMap[key]) keyMap[key] = handler(ch)\n    }\n  }\n  ensureBound(defaults.pairs + \"`\")\n\n  function handler(ch) {\n    return function(cm) { return handleChar(cm, ch); };\n  }\n\n  function getConfig(cm) {\n    var deflt = cm.state.closeBrackets;\n    if (!deflt || deflt.override) return deflt;\n    var mode = cm.getModeAt(cm.getCursor());\n    return mode.closeBrackets || deflt;\n  }\n\n  function handleBackspace(cm) {\n    var conf = getConfig(cm);\n    if (!conf || cm.getOption(\"disableInput\")) return CodeMirror.Pass;\n\n    var pairs = getOption(conf, \"pairs\");\n    var ranges = cm.listSelections();\n    for (var i = 0; i < ranges.length; i++) {\n      if (!ranges[i].empty()) return CodeMirror.Pass;\n      var around = charsAround(cm, ranges[i].head);\n      if (!around || pairs.indexOf(around) % 2 != 0) return CodeMirror.Pass;\n    }\n    for (var i = ranges.length - 1; i >= 0; i--) {\n      var cur = ranges[i].head;\n      cm.replaceRange(\"\", Pos(cur.line, cur.ch - 1), Pos(cur.line, cur.ch + 1), \"+delete\");\n    }\n  }\n\n  function handleEnter(cm) {\n    var conf = getConfig(cm);\n    var explode = conf && getOption(conf, \"explode\");\n    if (!explode || cm.getOption(\"disableInput\")) return CodeMirror.Pass;\n\n    var ranges = cm.listSelections();\n    for (var i = 0; i < ranges.length; i++) {\n      if (!ranges[i].empty()) return CodeMirror.Pass;\n      var around = charsAround(cm, ranges[i].head);\n      if (!around || explode.indexOf(around) % 2 != 0) return CodeMirror.Pass;\n    }\n    cm.operation(function() {\n      var linesep = cm.lineSeparator() || \"\\n\";\n      cm.replaceSelection(linesep + linesep, null);\n      moveSel(cm, -1)\n      ranges = cm.listSelections();\n      for (var i = 0; i < ranges.length; i++) {\n        var line = ranges[i].head.line;\n        cm.indentLine(line, null, true);\n        cm.indentLine(line + 1, null, true);\n      }\n    });\n  }\n\n  function moveSel(cm, dir) {\n    var newRanges = [], ranges = cm.listSelections(), primary = 0\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i]\n      if (range.head == cm.getCursor()) primary = i\n      var pos = range.head.ch || dir > 0 ? {line: range.head.line, ch: range.head.ch + dir} : {line: range.head.line - 1}\n      newRanges.push({anchor: pos, head: pos})\n    }\n    cm.setSelections(newRanges, primary)\n  }\n\n  function contractSelection(sel) {\n    var inverted = CodeMirror.cmpPos(sel.anchor, sel.head) > 0;\n    return {anchor: new Pos(sel.anchor.line, sel.anchor.ch + (inverted ? -1 : 1)),\n            head: new Pos(sel.head.line, sel.head.ch + (inverted ? 1 : -1))};\n  }\n\n  function handleChar(cm, ch) {\n    var conf = getConfig(cm);\n    if (!conf || cm.getOption(\"disableInput\")) return CodeMirror.Pass;\n\n    var pairs = getOption(conf, \"pairs\");\n    var pos = pairs.indexOf(ch);\n    if (pos == -1) return CodeMirror.Pass;\n\n    var closeBefore = getOption(conf,\"closeBefore\");\n\n    var triples = getOption(conf, \"triples\");\n\n    var identical = pairs.charAt(pos + 1) == ch;\n    var ranges = cm.listSelections();\n    var opening = pos % 2 == 0;\n\n    var type;\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], cur = range.head, curType;\n      var next = cm.getRange(cur, Pos(cur.line, cur.ch + 1));\n      if (opening && !range.empty()) {\n        curType = \"surround\";\n      } else if ((identical || !opening) && next == ch) {\n        if (identical && stringStartsAfter(cm, cur))\n          curType = \"both\";\n        else if (triples.indexOf(ch) >= 0 && cm.getRange(cur, Pos(cur.line, cur.ch + 3)) == ch + ch + ch)\n          curType = \"skipThree\";\n        else\n          curType = \"skip\";\n      } else if (identical && cur.ch > 1 && triples.indexOf(ch) >= 0 &&\n                 cm.getRange(Pos(cur.line, cur.ch - 2), cur) == ch + ch) {\n        if (cur.ch > 2 && /\\bstring/.test(cm.getTokenTypeAt(Pos(cur.line, cur.ch - 2)))) return CodeMirror.Pass;\n        curType = \"addFour\";\n      } else if (identical) {\n        var prev = cur.ch == 0 ? \" \" : cm.getRange(Pos(cur.line, cur.ch - 1), cur)\n        if (!CodeMirror.isWordChar(next) && prev != ch && !CodeMirror.isWordChar(prev)) curType = \"both\";\n        else return CodeMirror.Pass;\n      } else if (opening && (next.length === 0 || /\\s/.test(next) || closeBefore.indexOf(next) > -1)) {\n        curType = \"both\";\n      } else {\n        return CodeMirror.Pass;\n      }\n      if (!type) type = curType;\n      else if (type != curType) return CodeMirror.Pass;\n    }\n\n    var left = pos % 2 ? pairs.charAt(pos - 1) : ch;\n    var right = pos % 2 ? ch : pairs.charAt(pos + 1);\n    cm.operation(function() {\n      if (type == \"skip\") {\n        moveSel(cm, 1)\n      } else if (type == \"skipThree\") {\n        moveSel(cm, 3)\n      } else if (type == \"surround\") {\n        var sels = cm.getSelections();\n        for (var i = 0; i < sels.length; i++)\n          sels[i] = left + sels[i] + right;\n        cm.replaceSelections(sels, \"around\");\n        sels = cm.listSelections().slice();\n        for (var i = 0; i < sels.length; i++)\n          sels[i] = contractSelection(sels[i]);\n        cm.setSelections(sels);\n      } else if (type == \"both\") {\n        cm.replaceSelection(left + right, null);\n        cm.triggerElectric(left + right);\n        moveSel(cm, -1)\n      } else if (type == \"addFour\") {\n        cm.replaceSelection(left + left + left + left, \"before\");\n        moveSel(cm, 1)\n      }\n    });\n  }\n\n  function charsAround(cm, pos) {\n    var str = cm.getRange(Pos(pos.line, pos.ch - 1),\n                          Pos(pos.line, pos.ch + 1));\n    return str.length == 2 ? str : null;\n  }\n\n  function stringStartsAfter(cm, pos) {\n    var token = cm.getTokenAt(Pos(pos.line, pos.ch + 1))\n    return /\\bstring/.test(token.type) && token.start == pos.ch &&\n      (pos.ch == 0 || !/\\bstring/.test(cm.getTokenTypeAt(pos)))\n  }\n});\n"],"names":["CodeMirror","defaults","pairs","closeBefore","triples","explode","Pos","getOption","conf","name","defineOption","cm","val","old","Init","removeKeyMap","keyMap","state","closeBrackets","ensureBound","addKeyMap","__name","Backspace","handleBackspace","Enter","handleEnter","chars","i","length","ch","charAt","key","handler","handleChar","getConfig","deflt","override","getModeAt","getCursor","Pass","ranges","listSelections","empty","around","charsAround","head","indexOf","cur","replaceRange","line","operation","linesep","lineSeparator","replaceSelection","moveSel","indentLine","dir","newRanges","primary","range","pos","push","anchor","setSelections","contractSelection","sel","inverted","cmpPos","type","identical","opening","curType","next","getRange","test","getTokenTypeAt","prev","isWordChar","stringStartsAfter","left","right","sels","getSelections","replaceSelections","slice","triggerElectric","str","token","getTokenAt","start","mod","require$$0"],"sourceRoot":""}