{"version":3,"file":"static/js/557.2b1777f5.chunk.js","mappings":"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","sources":["../node_modules/@graphiql/codemirror-graphql/esm/hint.js","../node_modules/node_modules/codemirror/addon/hint/show-hint.js"],"sourcesContent":["import CodeMirror from 'codemirror';\nimport 'codemirror/addon/hint/show-hint';\nimport { getAutocompleteSuggestions, Position } from 'graphql-language-service';\nCodeMirror.registerHelper('hint', 'graphql', (editor, options) => {\n    const { schema, externalFragments } = options;\n    if (!schema) {\n        return;\n    }\n    const cur = editor.getCursor();\n    const token = editor.getTokenAt(cur);\n    const tokenStart = token.type !== null && /\"|\\w/.test(token.string[0])\n        ? token.start\n        : token.end;\n    const position = new Position(cur.line, tokenStart);\n    const rawResults = getAutocompleteSuggestions(schema, editor.getValue(), position, token, externalFragments);\n    const results = {\n        list: rawResults.map(item => ({\n            text: item.label,\n            type: item.type,\n            description: item.documentation,\n            isDeprecated: item.isDeprecated,\n            deprecationReason: item.deprecationReason,\n        })),\n        from: { line: cur.line, ch: tokenStart },\n        to: { line: cur.line, ch: token.end },\n    };\n    if ((results === null || results === void 0 ? void 0 : results.list) && results.list.length > 0) {\n        results.from = CodeMirror.Pos(results.from.line, results.from.ch);\n        results.to = CodeMirror.Pos(results.to.line, results.to.ch);\n        CodeMirror.signal(editor, 'hasCompletion', editor, results, token);\n    }\n    return results;\n});\n//# sourceMappingURL=hint.js.map","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// declare global: DOMRect\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var HINT_ELEMENT_CLASS        = \"CodeMirror-hint\";\n  var ACTIVE_HINT_ELEMENT_CLASS = \"CodeMirror-hint-active\";\n\n  // This is the old interface, kept around for now to stay\n  // backwards-compatible.\n  CodeMirror.showHint = function(cm, getHints, options) {\n    if (!getHints) return cm.showHint(options);\n    if (options && options.async) getHints.async = true;\n    var newOpts = {hint: getHints};\n    if (options) for (var prop in options) newOpts[prop] = options[prop];\n    return cm.showHint(newOpts);\n  };\n\n  CodeMirror.defineExtension(\"showHint\", function(options) {\n    options = parseOptions(this, this.getCursor(\"start\"), options);\n    var selections = this.listSelections()\n    if (selections.length > 1) return;\n    // By default, don't allow completion when something is selected.\n    // A hint function can have a `supportsSelection` property to\n    // indicate that it can handle selections.\n    if (this.somethingSelected()) {\n      if (!options.hint.supportsSelection) return;\n      // Don't try with cross-line selections\n      for (var i = 0; i < selections.length; i++)\n        if (selections[i].head.line != selections[i].anchor.line) return;\n    }\n\n    if (this.state.completionActive) this.state.completionActive.close();\n    var completion = this.state.completionActive = new Completion(this, options);\n    if (!completion.options.hint) return;\n\n    CodeMirror.signal(this, \"startCompletion\", this);\n    completion.update(true);\n  });\n\n  CodeMirror.defineExtension(\"closeHint\", function() {\n    if (this.state.completionActive) this.state.completionActive.close()\n  })\n\n  function Completion(cm, options) {\n    this.cm = cm;\n    this.options = options;\n    this.widget = null;\n    this.debounce = 0;\n    this.tick = 0;\n    this.startPos = this.cm.getCursor(\"start\");\n    this.startLen = this.cm.getLine(this.startPos.line).length - this.cm.getSelection().length;\n\n    if (this.options.updateOnCursorActivity) {\n      var self = this;\n      cm.on(\"cursorActivity\", this.activityFunc = function() { self.cursorActivity(); });\n    }\n  }\n\n  var requestAnimationFrame = window.requestAnimationFrame || function(fn) {\n    return setTimeout(fn, 1000/60);\n  };\n  var cancelAnimationFrame = window.cancelAnimationFrame || clearTimeout;\n\n  Completion.prototype = {\n    close: function() {\n      if (!this.active()) return;\n      this.cm.state.completionActive = null;\n      this.tick = null;\n      if (this.options.updateOnCursorActivity) {\n        this.cm.off(\"cursorActivity\", this.activityFunc);\n      }\n\n      if (this.widget && this.data) CodeMirror.signal(this.data, \"close\");\n      if (this.widget) this.widget.close();\n      CodeMirror.signal(this.cm, \"endCompletion\", this.cm);\n    },\n\n    active: function() {\n      return this.cm.state.completionActive == this;\n    },\n\n    pick: function(data, i) {\n      var completion = data.list[i], self = this;\n      this.cm.operation(function() {\n        if (completion.hint)\n          completion.hint(self.cm, data, completion);\n        else\n          self.cm.replaceRange(getText(completion), completion.from || data.from,\n                               completion.to || data.to, \"complete\");\n        CodeMirror.signal(data, \"pick\", completion);\n        self.cm.scrollIntoView();\n      });\n      if (this.options.closeOnPick) {\n        this.close();\n      }\n    },\n\n    cursorActivity: function() {\n      if (this.debounce) {\n        cancelAnimationFrame(this.debounce);\n        this.debounce = 0;\n      }\n\n      var identStart = this.startPos;\n      if(this.data) {\n        identStart = this.data.from;\n      }\n\n      var pos = this.cm.getCursor(), line = this.cm.getLine(pos.line);\n      if (pos.line != this.startPos.line || line.length - pos.ch != this.startLen - this.startPos.ch ||\n          pos.ch < identStart.ch || this.cm.somethingSelected() ||\n          (!pos.ch || this.options.closeCharacters.test(line.charAt(pos.ch - 1)))) {\n        this.close();\n      } else {\n        var self = this;\n        this.debounce = requestAnimationFrame(function() {self.update();});\n        if (this.widget) this.widget.disable();\n      }\n    },\n\n    update: function(first) {\n      if (this.tick == null) return\n      var self = this, myTick = ++this.tick\n      fetchHints(this.options.hint, this.cm, this.options, function(data) {\n        if (self.tick == myTick) self.finishUpdate(data, first)\n      })\n    },\n\n    finishUpdate: function(data, first) {\n      if (this.data) CodeMirror.signal(this.data, \"update\");\n\n      var picked = (this.widget && this.widget.picked) || (first && this.options.completeSingle);\n      if (this.widget) this.widget.close();\n\n      this.data = data;\n\n      if (data && data.list.length) {\n        if (picked && data.list.length == 1) {\n          this.pick(data, 0);\n        } else {\n          this.widget = new Widget(this, data);\n          CodeMirror.signal(data, \"shown\");\n        }\n      }\n    }\n  };\n\n  function parseOptions(cm, pos, options) {\n    var editor = cm.options.hintOptions;\n    var out = {};\n    for (var prop in defaultOptions) out[prop] = defaultOptions[prop];\n    if (editor) for (var prop in editor)\n      if (editor[prop] !== undefined) out[prop] = editor[prop];\n    if (options) for (var prop in options)\n      if (options[prop] !== undefined) out[prop] = options[prop];\n    if (out.hint.resolve) out.hint = out.hint.resolve(cm, pos)\n    return out;\n  }\n\n  function getText(completion) {\n    if (typeof completion == \"string\") return completion;\n    else return completion.text;\n  }\n\n  function buildKeyMap(completion, handle) {\n    var baseMap = {\n      Up: function() {handle.moveFocus(-1);},\n      Down: function() {handle.moveFocus(1);},\n      PageUp: function() {handle.moveFocus(-handle.menuSize() + 1, true);},\n      PageDown: function() {handle.moveFocus(handle.menuSize() - 1, true);},\n      Home: function() {handle.setFocus(0);},\n      End: function() {handle.setFocus(handle.length - 1);},\n      Enter: handle.pick,\n      Tab: handle.pick,\n      Esc: handle.close\n    };\n\n    var mac = /Mac/.test(navigator.platform);\n\n    if (mac) {\n      baseMap[\"Ctrl-P\"] = function() {handle.moveFocus(-1);};\n      baseMap[\"Ctrl-N\"] = function() {handle.moveFocus(1);};\n    }\n\n    var custom = completion.options.customKeys;\n    var ourMap = custom ? {} : baseMap;\n    function addBinding(key, val) {\n      var bound;\n      if (typeof val != \"string\")\n        bound = function(cm) { return val(cm, handle); };\n      // This mechanism is deprecated\n      else if (baseMap.hasOwnProperty(val))\n        bound = baseMap[val];\n      else\n        bound = val;\n      ourMap[key] = bound;\n    }\n    if (custom)\n      for (var key in custom) if (custom.hasOwnProperty(key))\n        addBinding(key, custom[key]);\n    var extra = completion.options.extraKeys;\n    if (extra)\n      for (var key in extra) if (extra.hasOwnProperty(key))\n        addBinding(key, extra[key]);\n    return ourMap;\n  }\n\n  function getHintElement(hintsElement, el) {\n    while (el && el != hintsElement) {\n      if (el.nodeName.toUpperCase() === \"LI\" && el.parentNode == hintsElement) return el;\n      el = el.parentNode;\n    }\n  }\n\n  function Widget(completion, data) {\n    this.id = \"cm-complete-\" + Math.floor(Math.random(1e6))\n    this.completion = completion;\n    this.data = data;\n    this.picked = false;\n    var widget = this, cm = completion.cm;\n    var ownerDocument = cm.getInputField().ownerDocument;\n    var parentWindow = ownerDocument.defaultView || ownerDocument.parentWindow;\n\n    var hints = this.hints = ownerDocument.createElement(\"ul\");\n    hints.setAttribute(\"role\", \"listbox\")\n    hints.setAttribute(\"aria-expanded\", \"true\")\n    hints.id = this.id\n    var theme = completion.cm.options.theme;\n    hints.className = \"CodeMirror-hints \" + theme;\n    this.selectedHint = data.selectedHint || 0;\n\n    var completions = data.list;\n    for (var i = 0; i < completions.length; ++i) {\n      var elt = hints.appendChild(ownerDocument.createElement(\"li\")), cur = completions[i];\n      var className = HINT_ELEMENT_CLASS + (i != this.selectedHint ? \"\" : \" \" + ACTIVE_HINT_ELEMENT_CLASS);\n      if (cur.className != null) className = cur.className + \" \" + className;\n      elt.className = className;\n      if (i == this.selectedHint) elt.setAttribute(\"aria-selected\", \"true\")\n      elt.id = this.id + \"-\" + i\n      elt.setAttribute(\"role\", \"option\")\n      if (cur.render) cur.render(elt, data, cur);\n      else elt.appendChild(ownerDocument.createTextNode(cur.displayText || getText(cur)));\n      elt.hintId = i;\n    }\n\n    var container = completion.options.container || ownerDocument.body;\n    var pos = cm.cursorCoords(completion.options.alignWithWord ? data.from : null);\n    var left = pos.left, top = pos.bottom, below = true;\n    var offsetLeft = 0, offsetTop = 0;\n    if (container !== ownerDocument.body) {\n      // We offset the cursor position because left and top are relative to the offsetParent's top left corner.\n      var isContainerPositioned = ['absolute', 'relative', 'fixed'].indexOf(parentWindow.getComputedStyle(container).position) !== -1;\n      var offsetParent = isContainerPositioned ? container : container.offsetParent;\n      var offsetParentPosition = offsetParent.getBoundingClientRect();\n      var bodyPosition = ownerDocument.body.getBoundingClientRect();\n      offsetLeft = (offsetParentPosition.left - bodyPosition.left - offsetParent.scrollLeft);\n      offsetTop = (offsetParentPosition.top - bodyPosition.top - offsetParent.scrollTop);\n    }\n    hints.style.left = (left - offsetLeft) + \"px\";\n    hints.style.top = (top - offsetTop) + \"px\";\n\n    // If we're at the edge of the screen, then we want the menu to appear on the left of the cursor.\n    var winW = parentWindow.innerWidth || Math.max(ownerDocument.body.offsetWidth, ownerDocument.documentElement.offsetWidth);\n    var winH = parentWindow.innerHeight || Math.max(ownerDocument.body.offsetHeight, ownerDocument.documentElement.offsetHeight);\n    container.appendChild(hints);\n    cm.getInputField().setAttribute(\"aria-autocomplete\", \"list\")\n    cm.getInputField().setAttribute(\"aria-owns\", this.id)\n    cm.getInputField().setAttribute(\"aria-activedescendant\", this.id + \"-\" + this.selectedHint)\n\n    var box = completion.options.moveOnOverlap ? hints.getBoundingClientRect() : new DOMRect();\n    var scrolls = completion.options.paddingForScrollbar ? hints.scrollHeight > hints.clientHeight + 1 : false;\n\n    // Compute in the timeout to avoid reflow on init\n    var startScroll;\n    setTimeout(function() { startScroll = cm.getScrollInfo(); });\n\n    var overlapY = box.bottom - winH;\n    if (overlapY > 0) {\n      var height = box.bottom - box.top, curTop = pos.top - (pos.bottom - box.top);\n      if (curTop - height > 0) { // Fits above cursor\n        hints.style.top = (top = pos.top - height - offsetTop) + \"px\";\n        below = false;\n      } else if (height > winH) {\n        hints.style.height = (winH - 5) + \"px\";\n        hints.style.top = (top = pos.bottom - box.top - offsetTop) + \"px\";\n        var cursor = cm.getCursor();\n        if (data.from.ch != cursor.ch) {\n          pos = cm.cursorCoords(cursor);\n          hints.style.left = (left = pos.left - offsetLeft) + \"px\";\n          box = hints.getBoundingClientRect();\n        }\n      }\n    }\n    var overlapX = box.right - winW;\n    if (scrolls) overlapX += cm.display.nativeBarWidth;\n    if (overlapX > 0) {\n      if (box.right - box.left > winW) {\n        hints.style.width = (winW - 5) + \"px\";\n        overlapX -= (box.right - box.left) - winW;\n      }\n      hints.style.left = (left = pos.left - overlapX - offsetLeft) + \"px\";\n    }\n    if (scrolls) for (var node = hints.firstChild; node; node = node.nextSibling)\n      node.style.paddingRight = cm.display.nativeBarWidth + \"px\"\n\n    cm.addKeyMap(this.keyMap = buildKeyMap(completion, {\n      moveFocus: function(n, avoidWrap) { widget.changeActive(widget.selectedHint + n, avoidWrap); },\n      setFocus: function(n) { widget.changeActive(n); },\n      menuSize: function() { return widget.screenAmount(); },\n      length: completions.length,\n      close: function() { completion.close(); },\n      pick: function() { widget.pick(); },\n      data: data\n    }));\n\n    if (completion.options.closeOnUnfocus) {\n      var closingOnBlur;\n      cm.on(\"blur\", this.onBlur = function() { closingOnBlur = setTimeout(function() { completion.close(); }, 100); });\n      cm.on(\"focus\", this.onFocus = function() { clearTimeout(closingOnBlur); });\n    }\n\n    cm.on(\"scroll\", this.onScroll = function() {\n      var curScroll = cm.getScrollInfo(), editor = cm.getWrapperElement().getBoundingClientRect();\n      if (!startScroll) startScroll = cm.getScrollInfo();\n      var newTop = top + startScroll.top - curScroll.top;\n      var point = newTop - (parentWindow.pageYOffset || (ownerDocument.documentElement || ownerDocument.body).scrollTop);\n      if (!below) point += hints.offsetHeight;\n      if (point <= editor.top || point >= editor.bottom) return completion.close();\n      hints.style.top = newTop + \"px\";\n      hints.style.left = (left + startScroll.left - curScroll.left) + \"px\";\n    });\n\n    CodeMirror.on(hints, \"dblclick\", function(e) {\n      var t = getHintElement(hints, e.target || e.srcElement);\n      if (t && t.hintId != null) {widget.changeActive(t.hintId); widget.pick();}\n    });\n\n    CodeMirror.on(hints, \"click\", function(e) {\n      var t = getHintElement(hints, e.target || e.srcElement);\n      if (t && t.hintId != null) {\n        widget.changeActive(t.hintId);\n        if (completion.options.completeOnSingleClick) widget.pick();\n      }\n    });\n\n    CodeMirror.on(hints, \"mousedown\", function() {\n      setTimeout(function(){cm.focus();}, 20);\n    });\n\n    // The first hint doesn't need to be scrolled to on init\n    var selectedHintRange = this.getSelectedHintRange();\n    if (selectedHintRange.from !== 0 || selectedHintRange.to !== 0) {\n      this.scrollToActive();\n    }\n\n    CodeMirror.signal(data, \"select\", completions[this.selectedHint], hints.childNodes[this.selectedHint]);\n    return true;\n  }\n\n  Widget.prototype = {\n    close: function() {\n      if (this.completion.widget != this) return;\n      this.completion.widget = null;\n      if (this.hints.parentNode) this.hints.parentNode.removeChild(this.hints);\n      this.completion.cm.removeKeyMap(this.keyMap);\n      var input = this.completion.cm.getInputField()\n      input.removeAttribute(\"aria-activedescendant\")\n      input.removeAttribute(\"aria-owns\")\n\n      var cm = this.completion.cm;\n      if (this.completion.options.closeOnUnfocus) {\n        cm.off(\"blur\", this.onBlur);\n        cm.off(\"focus\", this.onFocus);\n      }\n      cm.off(\"scroll\", this.onScroll);\n    },\n\n    disable: function() {\n      this.completion.cm.removeKeyMap(this.keyMap);\n      var widget = this;\n      this.keyMap = {Enter: function() { widget.picked = true; }};\n      this.completion.cm.addKeyMap(this.keyMap);\n    },\n\n    pick: function() {\n      this.completion.pick(this.data, this.selectedHint);\n    },\n\n    changeActive: function(i, avoidWrap) {\n      if (i >= this.data.list.length)\n        i = avoidWrap ? this.data.list.length - 1 : 0;\n      else if (i < 0)\n        i = avoidWrap ? 0  : this.data.list.length - 1;\n      if (this.selectedHint == i) return;\n      var node = this.hints.childNodes[this.selectedHint];\n      if (node) {\n        node.className = node.className.replace(\" \" + ACTIVE_HINT_ELEMENT_CLASS, \"\");\n        node.removeAttribute(\"aria-selected\")\n      }\n      node = this.hints.childNodes[this.selectedHint = i];\n      node.className += \" \" + ACTIVE_HINT_ELEMENT_CLASS;\n      node.setAttribute(\"aria-selected\", \"true\")\n      this.completion.cm.getInputField().setAttribute(\"aria-activedescendant\", node.id)\n      this.scrollToActive()\n      CodeMirror.signal(this.data, \"select\", this.data.list[this.selectedHint], node);\n    },\n\n    scrollToActive: function() {\n      var selectedHintRange = this.getSelectedHintRange();\n      var node1 = this.hints.childNodes[selectedHintRange.from];\n      var node2 = this.hints.childNodes[selectedHintRange.to];\n      var firstNode = this.hints.firstChild;\n      if (node1.offsetTop < this.hints.scrollTop)\n        this.hints.scrollTop = node1.offsetTop - firstNode.offsetTop;\n      else if (node2.offsetTop + node2.offsetHeight > this.hints.scrollTop + this.hints.clientHeight)\n        this.hints.scrollTop = node2.offsetTop + node2.offsetHeight - this.hints.clientHeight + firstNode.offsetTop;\n    },\n\n    screenAmount: function() {\n      return Math.floor(this.hints.clientHeight / this.hints.firstChild.offsetHeight) || 1;\n    },\n\n    getSelectedHintRange: function() {\n      var margin = this.completion.options.scrollMargin || 0;\n      return {\n        from: Math.max(0, this.selectedHint - margin),\n        to: Math.min(this.data.list.length - 1, this.selectedHint + margin),\n      };\n    }\n  };\n\n  function applicableHelpers(cm, helpers) {\n    if (!cm.somethingSelected()) return helpers\n    var result = []\n    for (var i = 0; i < helpers.length; i++)\n      if (helpers[i].supportsSelection) result.push(helpers[i])\n    return result\n  }\n\n  function fetchHints(hint, cm, options, callback) {\n    if (hint.async) {\n      hint(cm, callback, options)\n    } else {\n      var result = hint(cm, options)\n      if (result && result.then) result.then(callback)\n      else callback(result)\n    }\n  }\n\n  function resolveAutoHints(cm, pos) {\n    var helpers = cm.getHelpers(pos, \"hint\"), words\n    if (helpers.length) {\n      var resolved = function(cm, callback, options) {\n        var app = applicableHelpers(cm, helpers);\n        function run(i) {\n          if (i == app.length) return callback(null)\n          fetchHints(app[i], cm, options, function(result) {\n            if (result && result.list.length > 0) callback(result)\n            else run(i + 1)\n          })\n        }\n        run(0)\n      }\n      resolved.async = true\n      resolved.supportsSelection = true\n      return resolved\n    } else if (words = cm.getHelper(cm.getCursor(), \"hintWords\")) {\n      return function(cm) { return CodeMirror.hint.fromList(cm, {words: words}) }\n    } else if (CodeMirror.hint.anyword) {\n      return function(cm, options) { return CodeMirror.hint.anyword(cm, options) }\n    } else {\n      return function() {}\n    }\n  }\n\n  CodeMirror.registerHelper(\"hint\", \"auto\", {\n    resolve: resolveAutoHints\n  });\n\n  CodeMirror.registerHelper(\"hint\", \"fromList\", function(cm, options) {\n    var cur = cm.getCursor(), token = cm.getTokenAt(cur)\n    var term, from = CodeMirror.Pos(cur.line, token.start), to = cur\n    if (token.start < cur.ch && /\\w/.test(token.string.charAt(cur.ch - token.start - 1))) {\n      term = token.string.substr(0, cur.ch - token.start)\n    } else {\n      term = \"\"\n      from = cur\n    }\n    var found = [];\n    for (var i = 0; i < options.words.length; i++) {\n      var word = options.words[i];\n      if (word.slice(0, term.length) == term)\n        found.push(word);\n    }\n\n    if (found.length) return {list: found, from: from, to: to};\n  });\n\n  CodeMirror.commands.autocomplete = CodeMirror.showHint;\n\n  var defaultOptions = {\n    hint: CodeMirror.hint.auto,\n    completeSingle: true,\n    alignWithWord: true,\n    closeCharacters: /[\\s()\\[\\]{};:>,]/,\n    closeOnPick: true,\n    closeOnUnfocus: true,\n    updateOnCursorActivity: true,\n    completeOnSingleClick: true,\n    container: null,\n    customKeys: null,\n    extraKeys: null,\n    paddingForScrollbar: true,\n    moveOnOverlap: true,\n  };\n\n  CodeMirror.defineOption(\"hintOptions\", null);\n});\n"],"names":["CodeMirror","editor","options","schema","externalFragments","cur","getCursor","token","getTokenAt","tokenStart","type","test","string","start","end","position","Position","line","results","list","getAutocompleteSuggestions","getValue","map","item","text","label","description","documentation","isDeprecated","deprecationReason","from","ch","to","length","HINT_ELEMENT_CLASS","ACTIVE_HINT_ELEMENT_CLASS","Completion","cm","this","widget","debounce","tick","startPos","startLen","getLine","getSelection","updateOnCursorActivity","self","on","activityFunc","cursorActivity","showHint","getHints","async","newOpts","hint","prop","defineExtension","parseOptions","selections","listSelections","somethingSelected","supportsSelection","i","head","anchor","state","completionActive","close","completion","signal","update","__name","requestAnimationFrame","window","fn","setTimeout","cancelAnimationFrame","clearTimeout","pos","hintOptions","out","defaultOptions","resolve","getText","buildKeyMap","handle","baseMap","Up","moveFocus","Down","PageUp","menuSize","PageDown","Home","setFocus","End","Enter","pick","Tab","Esc","navigator","platform","custom","customKeys","ourMap","addBinding","key","val","bound","hasOwnProperty","extra","extraKeys","getHintElement","hintsElement","el","nodeName","toUpperCase","parentNode","Widget","data","id","Math","floor","random","picked","ownerDocument","getInputField","parentWindow","defaultView","hints","createElement","setAttribute","theme","className","selectedHint","completions","elt","appendChild","render","createTextNode","displayText","hintId","container","body","cursorCoords","alignWithWord","left","top","bottom","below","offsetLeft","offsetTop","offsetParent","indexOf","getComputedStyle","offsetParentPosition","getBoundingClientRect","bodyPosition","scrollLeft","scrollTop","style","winW","innerWidth","max","offsetWidth","documentElement","winH","innerHeight","offsetHeight","startScroll","box","moveOnOverlap","DOMRect","scrolls","paddingForScrollbar","scrollHeight","clientHeight","getScrollInfo","height","cursor","closingOnBlur","overlapX","right","display","nativeBarWidth","width","node","firstChild","nextSibling","paddingRight","addKeyMap","keyMap","n","avoidWrap","changeActive","screenAmount","closeOnUnfocus","onBlur","onFocus","onScroll","curScroll","getWrapperElement","newTop","point","pageYOffset","e","t","target","srcElement","completeOnSingleClick","focus","selectedHintRange","getSelectedHintRange","scrollToActive","childNodes","applicableHelpers","helpers","result","push","fetchHints","callback","then","resolveAutoHints","words","getHelpers","resolved","app","run","getHelper","fromList","anyword","prototype","active","off","operation","replaceRange","scrollIntoView","closeOnPick","identStart","closeCharacters","charAt","disable","first","myTick","finishUpdate","completeSingle","removeChild","removeKeyMap","input","removeAttribute","replace","node1","node2","firstNode","margin","scrollMargin","min","registerHelper","term","Pos","substr","found","word","slice","commands","autocomplete","auto","defineOption","mod","require$$0"],"sourceRoot":""}